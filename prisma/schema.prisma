generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @unique @db.ObjectId // <-- Add @unique here
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @map("refreshToken")
  access_token      String? @map("accessToken")
  expires_at        Int?    @map("expiresAt")
  token_type        String?
  scope             String?
  id_token          String? @map("idToken")
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Post          Post[]
  comments      Comment[]
}

model Category {
  id    String  @id @default(cuid()) @map("_id")
  slug  String  @unique
  title String
  img   String?
  Posts Post[]
}

model Post {
  id        String   @id @default(cuid()) @map("_id")
  slug      String   @unique
  title     String
  desc      String
  img       String?
  views     Int      @default(0)
  catSlug   String
  cat       Category @relation(fields: [catSlug], references: [slug])
  userEmail String
  user      User     @relation(fields: [userEmail], references: [email])
  comments  Comment[]
}

model Comment {
  id        String   @id @default(cuid()) @map("_id")
  desc      String
  userEmail String
  user      User     @relation(fields: [userEmail], references: [email])
  postSlug String
  post     Post     @relation(fields: [postSlug], references: [slug])

}
